/*
 * VocaDbWeb
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package mikufan.cx.vocadbapiclient.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.time.LocalDateTime;
import java.util.ArrayList;
import java.util.List;
import mikufan.cx.vocadbapiclient.model.CommentForApiContract;
import mikufan.cx.vocadbapiclient.model.EntryStatus;
import mikufan.cx.vocadbapiclient.model.EntryThumbForApiContract;
import mikufan.cx.vocadbapiclient.model.ReleaseEventForApiContract;
import mikufan.cx.vocadbapiclient.model.SongListFeaturedCategory;
import mikufan.cx.vocadbapiclient.model.TagUsageForApiContract;
import mikufan.cx.vocadbapiclient.model.UserForApiContract;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * SongListForApiContract
 */
@JsonPropertyOrder({
  SongListForApiContract.JSON_PROPERTY_AUTHOR,
  SongListForApiContract.JSON_PROPERTY_DELETED,
  SongListForApiContract.JSON_PROPERTY_DESCRIPTION,
  SongListForApiContract.JSON_PROPERTY_EVENT_DATE,
  SongListForApiContract.JSON_PROPERTY_EVENTS,
  SongListForApiContract.JSON_PROPERTY_LATEST_COMMENTS,
  SongListForApiContract.JSON_PROPERTY_MAIN_PICTURE,
  SongListForApiContract.JSON_PROPERTY_STATUS,
  SongListForApiContract.JSON_PROPERTY_TAGS,
  SongListForApiContract.JSON_PROPERTY_FEATURED_CATEGORY,
  SongListForApiContract.JSON_PROPERTY_ID,
  SongListForApiContract.JSON_PROPERTY_NAME
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-12-26T19:00:44.138376Z[Etc/UTC]")
public class SongListForApiContract {
  public static final String JSON_PROPERTY_AUTHOR = "author";
  private UserForApiContract author;

  public static final String JSON_PROPERTY_DELETED = "deleted";
  private Boolean deleted;

  public static final String JSON_PROPERTY_DESCRIPTION = "description";
  private String description;

  public static final String JSON_PROPERTY_EVENT_DATE = "eventDate";
  private LocalDateTime eventDate;

  public static final String JSON_PROPERTY_EVENTS = "events";
  private List<ReleaseEventForApiContract> events = null;

  public static final String JSON_PROPERTY_LATEST_COMMENTS = "latestComments";
  private List<CommentForApiContract> latestComments = null;

  public static final String JSON_PROPERTY_MAIN_PICTURE = "mainPicture";
  private EntryThumbForApiContract mainPicture;

  public static final String JSON_PROPERTY_STATUS = "status";
  private EntryStatus status;

  public static final String JSON_PROPERTY_TAGS = "tags";
  private List<TagUsageForApiContract> tags = null;

  public static final String JSON_PROPERTY_FEATURED_CATEGORY = "featuredCategory";
  private SongListFeaturedCategory featuredCategory;

  public static final String JSON_PROPERTY_ID = "id";
  private Integer id;

  public static final String JSON_PROPERTY_NAME = "name";
  private String name;

  public SongListForApiContract() {
  }

  public SongListForApiContract author(UserForApiContract author) {
    
    this.author = author;
    return this;
  }

   /**
   * Get author
   * @return author
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_AUTHOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public UserForApiContract getAuthor() {
    return author;
  }


  @JsonProperty(JSON_PROPERTY_AUTHOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAuthor(UserForApiContract author) {
    this.author = author;
  }


  public SongListForApiContract deleted(Boolean deleted) {
    
    this.deleted = deleted;
    return this;
  }

   /**
   * Get deleted
   * @return deleted
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DELETED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getDeleted() {
    return deleted;
  }


  @JsonProperty(JSON_PROPERTY_DELETED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDeleted(Boolean deleted) {
    this.deleted = deleted;
  }


  public SongListForApiContract description(String description) {
    
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDescription() {
    return description;
  }


  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDescription(String description) {
    this.description = description;
  }


  public SongListForApiContract eventDate(LocalDateTime eventDate) {
    
    this.eventDate = eventDate;
    return this;
  }

   /**
   * Get eventDate
   * @return eventDate
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_EVENT_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public LocalDateTime getEventDate() {
    return eventDate;
  }


  @JsonProperty(JSON_PROPERTY_EVENT_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEventDate(LocalDateTime eventDate) {
    this.eventDate = eventDate;
  }


  public SongListForApiContract events(List<ReleaseEventForApiContract> events) {
    
    this.events = events;
    return this;
  }

  public SongListForApiContract addEventsItem(ReleaseEventForApiContract eventsItem) {
    if (this.events == null) {
      this.events = new ArrayList<>();
    }
    this.events.add(eventsItem);
    return this;
  }

   /**
   * Get events
   * @return events
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_EVENTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<ReleaseEventForApiContract> getEvents() {
    return events;
  }


  @JsonProperty(JSON_PROPERTY_EVENTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEvents(List<ReleaseEventForApiContract> events) {
    this.events = events;
  }


  public SongListForApiContract latestComments(List<CommentForApiContract> latestComments) {
    
    this.latestComments = latestComments;
    return this;
  }

  public SongListForApiContract addLatestCommentsItem(CommentForApiContract latestCommentsItem) {
    if (this.latestComments == null) {
      this.latestComments = new ArrayList<>();
    }
    this.latestComments.add(latestCommentsItem);
    return this;
  }

   /**
   * Get latestComments
   * @return latestComments
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LATEST_COMMENTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<CommentForApiContract> getLatestComments() {
    return latestComments;
  }


  @JsonProperty(JSON_PROPERTY_LATEST_COMMENTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLatestComments(List<CommentForApiContract> latestComments) {
    this.latestComments = latestComments;
  }


  public SongListForApiContract mainPicture(EntryThumbForApiContract mainPicture) {
    
    this.mainPicture = mainPicture;
    return this;
  }

   /**
   * Get mainPicture
   * @return mainPicture
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MAIN_PICTURE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public EntryThumbForApiContract getMainPicture() {
    return mainPicture;
  }


  @JsonProperty(JSON_PROPERTY_MAIN_PICTURE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMainPicture(EntryThumbForApiContract mainPicture) {
    this.mainPicture = mainPicture;
  }


  public SongListForApiContract status(EntryStatus status) {
    
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public EntryStatus getStatus() {
    return status;
  }


  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setStatus(EntryStatus status) {
    this.status = status;
  }


  public SongListForApiContract tags(List<TagUsageForApiContract> tags) {
    
    this.tags = tags;
    return this;
  }

  public SongListForApiContract addTagsItem(TagUsageForApiContract tagsItem) {
    if (this.tags == null) {
      this.tags = new ArrayList<>();
    }
    this.tags.add(tagsItem);
    return this;
  }

   /**
   * Get tags
   * @return tags
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TAGS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<TagUsageForApiContract> getTags() {
    return tags;
  }


  @JsonProperty(JSON_PROPERTY_TAGS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTags(List<TagUsageForApiContract> tags) {
    this.tags = tags;
  }


  public SongListForApiContract featuredCategory(SongListFeaturedCategory featuredCategory) {
    
    this.featuredCategory = featuredCategory;
    return this;
  }

   /**
   * Get featuredCategory
   * @return featuredCategory
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_FEATURED_CATEGORY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public SongListFeaturedCategory getFeaturedCategory() {
    return featuredCategory;
  }


  @JsonProperty(JSON_PROPERTY_FEATURED_CATEGORY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFeaturedCategory(SongListFeaturedCategory featuredCategory) {
    this.featuredCategory = featuredCategory;
  }


  public SongListForApiContract id(Integer id) {
    
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setId(Integer id) {
    this.id = id;
  }


  public SongListForApiContract name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getName() {
    return name;
  }


  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setName(String name) {
    this.name = name;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SongListForApiContract songListForApiContract = (SongListForApiContract) o;
    return Objects.equals(this.author, songListForApiContract.author) &&
        Objects.equals(this.deleted, songListForApiContract.deleted) &&
        Objects.equals(this.description, songListForApiContract.description) &&
        Objects.equals(this.eventDate, songListForApiContract.eventDate) &&
        Objects.equals(this.events, songListForApiContract.events) &&
        Objects.equals(this.latestComments, songListForApiContract.latestComments) &&
        Objects.equals(this.mainPicture, songListForApiContract.mainPicture) &&
        Objects.equals(this.status, songListForApiContract.status) &&
        Objects.equals(this.tags, songListForApiContract.tags) &&
        Objects.equals(this.featuredCategory, songListForApiContract.featuredCategory) &&
        Objects.equals(this.id, songListForApiContract.id) &&
        Objects.equals(this.name, songListForApiContract.name);
  }

  @Override
  public int hashCode() {
    return Objects.hash(author, deleted, description, eventDate, events, latestComments, mainPicture, status, tags, featuredCategory, id, name);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SongListForApiContract {\n");
    sb.append("    author: ").append(toIndentedString(author)).append("\n");
    sb.append("    deleted: ").append(toIndentedString(deleted)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    eventDate: ").append(toIndentedString(eventDate)).append("\n");
    sb.append("    events: ").append(toIndentedString(events)).append("\n");
    sb.append("    latestComments: ").append(toIndentedString(latestComments)).append("\n");
    sb.append("    mainPicture: ").append(toIndentedString(mainPicture)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("    featuredCategory: ").append(toIndentedString(featuredCategory)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

