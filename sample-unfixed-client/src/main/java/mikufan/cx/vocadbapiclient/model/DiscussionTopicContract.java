/*
 * VocaDbWeb
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package mikufan.cx.vocadbapiclient.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.time.LocalDateTime;
import java.util.ArrayList;
import java.util.List;
import mikufan.cx.vocadbapiclient.model.CommentForApiContract;
import mikufan.cx.vocadbapiclient.model.UserForApiContract;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * DiscussionTopicContract
 */
@JsonPropertyOrder({
  DiscussionTopicContract.JSON_PROPERTY_AUTHOR,
  DiscussionTopicContract.JSON_PROPERTY_COMMENT_COUNT,
  DiscussionTopicContract.JSON_PROPERTY_COMMENTS,
  DiscussionTopicContract.JSON_PROPERTY_CONTENT,
  DiscussionTopicContract.JSON_PROPERTY_CREATED,
  DiscussionTopicContract.JSON_PROPERTY_FOLDER_ID,
  DiscussionTopicContract.JSON_PROPERTY_ID,
  DiscussionTopicContract.JSON_PROPERTY_LAST_COMMENT,
  DiscussionTopicContract.JSON_PROPERTY_LOCKED,
  DiscussionTopicContract.JSON_PROPERTY_NAME
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-01-27T01:04:32.642512Z[Etc/UTC]")
public class DiscussionTopicContract {
  public static final String JSON_PROPERTY_AUTHOR = "author";
  private UserForApiContract author;

  public static final String JSON_PROPERTY_COMMENT_COUNT = "commentCount";
  private Integer commentCount;

  public static final String JSON_PROPERTY_COMMENTS = "comments";
  private List<CommentForApiContract> comments = null;

  public static final String JSON_PROPERTY_CONTENT = "content";
  private String content;

  public static final String JSON_PROPERTY_CREATED = "created";
  private LocalDateTime created;

  public static final String JSON_PROPERTY_FOLDER_ID = "folderId";
  private Integer folderId;

  public static final String JSON_PROPERTY_ID = "id";
  private Integer id;

  public static final String JSON_PROPERTY_LAST_COMMENT = "lastComment";
  private CommentForApiContract lastComment;

  public static final String JSON_PROPERTY_LOCKED = "locked";
  private Boolean locked;

  public static final String JSON_PROPERTY_NAME = "name";
  private String name;

  public DiscussionTopicContract() {
  }

  public DiscussionTopicContract author(UserForApiContract author) {
    
    this.author = author;
    return this;
  }

   /**
   * Get author
   * @return author
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_AUTHOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public UserForApiContract getAuthor() {
    return author;
  }


  @JsonProperty(JSON_PROPERTY_AUTHOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAuthor(UserForApiContract author) {
    this.author = author;
  }


  public DiscussionTopicContract commentCount(Integer commentCount) {
    
    this.commentCount = commentCount;
    return this;
  }

   /**
   * Get commentCount
   * @return commentCount
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_COMMENT_COUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getCommentCount() {
    return commentCount;
  }


  @JsonProperty(JSON_PROPERTY_COMMENT_COUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCommentCount(Integer commentCount) {
    this.commentCount = commentCount;
  }


  public DiscussionTopicContract comments(List<CommentForApiContract> comments) {
    
    this.comments = comments;
    return this;
  }

  public DiscussionTopicContract addCommentsItem(CommentForApiContract commentsItem) {
    if (this.comments == null) {
      this.comments = new ArrayList<>();
    }
    this.comments.add(commentsItem);
    return this;
  }

   /**
   * Get comments
   * @return comments
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_COMMENTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<CommentForApiContract> getComments() {
    return comments;
  }


  @JsonProperty(JSON_PROPERTY_COMMENTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setComments(List<CommentForApiContract> comments) {
    this.comments = comments;
  }


  public DiscussionTopicContract content(String content) {
    
    this.content = content;
    return this;
  }

   /**
   * Get content
   * @return content
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CONTENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getContent() {
    return content;
  }


  @JsonProperty(JSON_PROPERTY_CONTENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setContent(String content) {
    this.content = content;
  }


  public DiscussionTopicContract created(LocalDateTime created) {
    
    this.created = created;
    return this;
  }

   /**
   * Get created
   * @return created
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CREATED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public LocalDateTime getCreated() {
    return created;
  }


  @JsonProperty(JSON_PROPERTY_CREATED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCreated(LocalDateTime created) {
    this.created = created;
  }


  public DiscussionTopicContract folderId(Integer folderId) {
    
    this.folderId = folderId;
    return this;
  }

   /**
   * Get folderId
   * @return folderId
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_FOLDER_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getFolderId() {
    return folderId;
  }


  @JsonProperty(JSON_PROPERTY_FOLDER_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFolderId(Integer folderId) {
    this.folderId = folderId;
  }


  public DiscussionTopicContract id(Integer id) {
    
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setId(Integer id) {
    this.id = id;
  }


  public DiscussionTopicContract lastComment(CommentForApiContract lastComment) {
    
    this.lastComment = lastComment;
    return this;
  }

   /**
   * Get lastComment
   * @return lastComment
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LAST_COMMENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public CommentForApiContract getLastComment() {
    return lastComment;
  }


  @JsonProperty(JSON_PROPERTY_LAST_COMMENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLastComment(CommentForApiContract lastComment) {
    this.lastComment = lastComment;
  }


  public DiscussionTopicContract locked(Boolean locked) {
    
    this.locked = locked;
    return this;
  }

   /**
   * Get locked
   * @return locked
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LOCKED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getLocked() {
    return locked;
  }


  @JsonProperty(JSON_PROPERTY_LOCKED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLocked(Boolean locked) {
    this.locked = locked;
  }


  public DiscussionTopicContract name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getName() {
    return name;
  }


  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setName(String name) {
    this.name = name;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DiscussionTopicContract discussionTopicContract = (DiscussionTopicContract) o;
    return Objects.equals(this.author, discussionTopicContract.author) &&
        Objects.equals(this.commentCount, discussionTopicContract.commentCount) &&
        Objects.equals(this.comments, discussionTopicContract.comments) &&
        Objects.equals(this.content, discussionTopicContract.content) &&
        Objects.equals(this.created, discussionTopicContract.created) &&
        Objects.equals(this.folderId, discussionTopicContract.folderId) &&
        Objects.equals(this.id, discussionTopicContract.id) &&
        Objects.equals(this.lastComment, discussionTopicContract.lastComment) &&
        Objects.equals(this.locked, discussionTopicContract.locked) &&
        Objects.equals(this.name, discussionTopicContract.name);
  }

  @Override
  public int hashCode() {
    return Objects.hash(author, commentCount, comments, content, created, folderId, id, lastComment, locked, name);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DiscussionTopicContract {\n");
    sb.append("    author: ").append(toIndentedString(author)).append("\n");
    sb.append("    commentCount: ").append(toIndentedString(commentCount)).append("\n");
    sb.append("    comments: ").append(toIndentedString(comments)).append("\n");
    sb.append("    content: ").append(toIndentedString(content)).append("\n");
    sb.append("    created: ").append(toIndentedString(created)).append("\n");
    sb.append("    folderId: ").append(toIndentedString(folderId)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    lastComment: ").append(toIndentedString(lastComment)).append("\n");
    sb.append("    locked: ").append(toIndentedString(locked)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

