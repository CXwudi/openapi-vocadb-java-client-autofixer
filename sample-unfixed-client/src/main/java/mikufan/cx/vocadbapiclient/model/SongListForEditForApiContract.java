/*
 * VocaDbWeb
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package mikufan.cx.vocadbapiclient.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.time.LocalDateTime;
import java.util.ArrayList;
import java.util.List;
import mikufan.cx.vocadbapiclient.model.EntryStatus;
import mikufan.cx.vocadbapiclient.model.EntryThumbForApiContract;
import mikufan.cx.vocadbapiclient.model.SongInListEditContract;
import mikufan.cx.vocadbapiclient.model.SongListFeaturedCategory;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * SongListForEditForApiContract
 */
@JsonPropertyOrder({
  SongListForEditForApiContract.JSON_PROPERTY_DELETED,
  SongListForEditForApiContract.JSON_PROPERTY_DESCRIPTION,
  SongListForEditForApiContract.JSON_PROPERTY_EVENT_DATE,
  SongListForEditForApiContract.JSON_PROPERTY_FEATURED_CATEGORY,
  SongListForEditForApiContract.JSON_PROPERTY_ID,
  SongListForEditForApiContract.JSON_PROPERTY_MAIN_PICTURE,
  SongListForEditForApiContract.JSON_PROPERTY_NAME,
  SongListForEditForApiContract.JSON_PROPERTY_SONG_LINKS,
  SongListForEditForApiContract.JSON_PROPERTY_STATUS,
  SongListForEditForApiContract.JSON_PROPERTY_UPDATE_NOTES
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-12-26T19:00:44.138376Z[Etc/UTC]")
public class SongListForEditForApiContract {
  public static final String JSON_PROPERTY_DELETED = "deleted";
  private Boolean deleted;

  public static final String JSON_PROPERTY_DESCRIPTION = "description";
  private String description;

  public static final String JSON_PROPERTY_EVENT_DATE = "eventDate";
  private LocalDateTime eventDate;

  public static final String JSON_PROPERTY_FEATURED_CATEGORY = "featuredCategory";
  private SongListFeaturedCategory featuredCategory;

  public static final String JSON_PROPERTY_ID = "id";
  private Integer id;

  public static final String JSON_PROPERTY_MAIN_PICTURE = "mainPicture";
  private EntryThumbForApiContract mainPicture;

  public static final String JSON_PROPERTY_NAME = "name";
  private String name;

  public static final String JSON_PROPERTY_SONG_LINKS = "songLinks";
  private List<SongInListEditContract> songLinks = null;

  public static final String JSON_PROPERTY_STATUS = "status";
  private EntryStatus status;

  public static final String JSON_PROPERTY_UPDATE_NOTES = "updateNotes";
  private String updateNotes;

  public SongListForEditForApiContract() {
  }

  public SongListForEditForApiContract deleted(Boolean deleted) {
    
    this.deleted = deleted;
    return this;
  }

   /**
   * Get deleted
   * @return deleted
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DELETED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getDeleted() {
    return deleted;
  }


  @JsonProperty(JSON_PROPERTY_DELETED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDeleted(Boolean deleted) {
    this.deleted = deleted;
  }


  public SongListForEditForApiContract description(String description) {
    
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDescription() {
    return description;
  }


  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDescription(String description) {
    this.description = description;
  }


  public SongListForEditForApiContract eventDate(LocalDateTime eventDate) {
    
    this.eventDate = eventDate;
    return this;
  }

   /**
   * Get eventDate
   * @return eventDate
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_EVENT_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public LocalDateTime getEventDate() {
    return eventDate;
  }


  @JsonProperty(JSON_PROPERTY_EVENT_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEventDate(LocalDateTime eventDate) {
    this.eventDate = eventDate;
  }


  public SongListForEditForApiContract featuredCategory(SongListFeaturedCategory featuredCategory) {
    
    this.featuredCategory = featuredCategory;
    return this;
  }

   /**
   * Get featuredCategory
   * @return featuredCategory
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_FEATURED_CATEGORY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public SongListFeaturedCategory getFeaturedCategory() {
    return featuredCategory;
  }


  @JsonProperty(JSON_PROPERTY_FEATURED_CATEGORY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFeaturedCategory(SongListFeaturedCategory featuredCategory) {
    this.featuredCategory = featuredCategory;
  }


  public SongListForEditForApiContract id(Integer id) {
    
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setId(Integer id) {
    this.id = id;
  }


  public SongListForEditForApiContract mainPicture(EntryThumbForApiContract mainPicture) {
    
    this.mainPicture = mainPicture;
    return this;
  }

   /**
   * Get mainPicture
   * @return mainPicture
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MAIN_PICTURE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public EntryThumbForApiContract getMainPicture() {
    return mainPicture;
  }


  @JsonProperty(JSON_PROPERTY_MAIN_PICTURE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMainPicture(EntryThumbForApiContract mainPicture) {
    this.mainPicture = mainPicture;
  }


  public SongListForEditForApiContract name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getName() {
    return name;
  }


  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setName(String name) {
    this.name = name;
  }


  public SongListForEditForApiContract songLinks(List<SongInListEditContract> songLinks) {
    
    this.songLinks = songLinks;
    return this;
  }

  public SongListForEditForApiContract addSongLinksItem(SongInListEditContract songLinksItem) {
    if (this.songLinks == null) {
      this.songLinks = new ArrayList<>();
    }
    this.songLinks.add(songLinksItem);
    return this;
  }

   /**
   * Get songLinks
   * @return songLinks
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SONG_LINKS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<SongInListEditContract> getSongLinks() {
    return songLinks;
  }


  @JsonProperty(JSON_PROPERTY_SONG_LINKS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSongLinks(List<SongInListEditContract> songLinks) {
    this.songLinks = songLinks;
  }


  public SongListForEditForApiContract status(EntryStatus status) {
    
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public EntryStatus getStatus() {
    return status;
  }


  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setStatus(EntryStatus status) {
    this.status = status;
  }


  public SongListForEditForApiContract updateNotes(String updateNotes) {
    
    this.updateNotes = updateNotes;
    return this;
  }

   /**
   * Get updateNotes
   * @return updateNotes
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_UPDATE_NOTES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getUpdateNotes() {
    return updateNotes;
  }


  @JsonProperty(JSON_PROPERTY_UPDATE_NOTES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUpdateNotes(String updateNotes) {
    this.updateNotes = updateNotes;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SongListForEditForApiContract songListForEditForApiContract = (SongListForEditForApiContract) o;
    return Objects.equals(this.deleted, songListForEditForApiContract.deleted) &&
        Objects.equals(this.description, songListForEditForApiContract.description) &&
        Objects.equals(this.eventDate, songListForEditForApiContract.eventDate) &&
        Objects.equals(this.featuredCategory, songListForEditForApiContract.featuredCategory) &&
        Objects.equals(this.id, songListForEditForApiContract.id) &&
        Objects.equals(this.mainPicture, songListForEditForApiContract.mainPicture) &&
        Objects.equals(this.name, songListForEditForApiContract.name) &&
        Objects.equals(this.songLinks, songListForEditForApiContract.songLinks) &&
        Objects.equals(this.status, songListForEditForApiContract.status) &&
        Objects.equals(this.updateNotes, songListForEditForApiContract.updateNotes);
  }

  @Override
  public int hashCode() {
    return Objects.hash(deleted, description, eventDate, featuredCategory, id, mainPicture, name, songLinks, status, updateNotes);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SongListForEditForApiContract {\n");
    sb.append("    deleted: ").append(toIndentedString(deleted)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    eventDate: ").append(toIndentedString(eventDate)).append("\n");
    sb.append("    featuredCategory: ").append(toIndentedString(featuredCategory)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    mainPicture: ").append(toIndentedString(mainPicture)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    songLinks: ").append(toIndentedString(songLinks)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    updateNotes: ").append(toIndentedString(updateNotes)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

