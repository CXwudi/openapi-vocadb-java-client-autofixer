/*
 * VocaDbWeb
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package mikufan.cx.vocadbapiclient.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import mikufan.cx.vocadbapiclient.model.SongForApiContract;
import mikufan.cx.vocadbapiclient.model.SongVoteRating;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * SongInAlbumForApiContract
 */
@JsonPropertyOrder({
  SongInAlbumForApiContract.JSON_PROPERTY_DISC_NUMBER,
  SongInAlbumForApiContract.JSON_PROPERTY_ID,
  SongInAlbumForApiContract.JSON_PROPERTY_NAME,
  SongInAlbumForApiContract.JSON_PROPERTY_RATING,
  SongInAlbumForApiContract.JSON_PROPERTY_SONG,
  SongInAlbumForApiContract.JSON_PROPERTY_TRACK_NUMBER
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-12-26T19:00:44.138376Z[Etc/UTC]")
public class SongInAlbumForApiContract {
  public static final String JSON_PROPERTY_DISC_NUMBER = "discNumber";
  private Integer discNumber;

  public static final String JSON_PROPERTY_ID = "id";
  private Integer id;

  public static final String JSON_PROPERTY_NAME = "name";
  private String name;

  public static final String JSON_PROPERTY_RATING = "rating";
  private SongVoteRating rating;

  public static final String JSON_PROPERTY_SONG = "song";
  private SongForApiContract song;

  public static final String JSON_PROPERTY_TRACK_NUMBER = "trackNumber";
  private Integer trackNumber;

  public SongInAlbumForApiContract() {
  }

  public SongInAlbumForApiContract discNumber(Integer discNumber) {
    
    this.discNumber = discNumber;
    return this;
  }

   /**
   * Get discNumber
   * @return discNumber
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DISC_NUMBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getDiscNumber() {
    return discNumber;
  }


  @JsonProperty(JSON_PROPERTY_DISC_NUMBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDiscNumber(Integer discNumber) {
    this.discNumber = discNumber;
  }


  public SongInAlbumForApiContract id(Integer id) {
    
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setId(Integer id) {
    this.id = id;
  }


  public SongInAlbumForApiContract name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getName() {
    return name;
  }


  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setName(String name) {
    this.name = name;
  }


  public SongInAlbumForApiContract rating(SongVoteRating rating) {
    
    this.rating = rating;
    return this;
  }

   /**
   * Get rating
   * @return rating
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_RATING)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public SongVoteRating getRating() {
    return rating;
  }


  @JsonProperty(JSON_PROPERTY_RATING)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRating(SongVoteRating rating) {
    this.rating = rating;
  }


  public SongInAlbumForApiContract song(SongForApiContract song) {
    
    this.song = song;
    return this;
  }

   /**
   * Get song
   * @return song
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SONG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public SongForApiContract getSong() {
    return song;
  }


  @JsonProperty(JSON_PROPERTY_SONG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSong(SongForApiContract song) {
    this.song = song;
  }


  public SongInAlbumForApiContract trackNumber(Integer trackNumber) {
    
    this.trackNumber = trackNumber;
    return this;
  }

   /**
   * Get trackNumber
   * @return trackNumber
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TRACK_NUMBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getTrackNumber() {
    return trackNumber;
  }


  @JsonProperty(JSON_PROPERTY_TRACK_NUMBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTrackNumber(Integer trackNumber) {
    this.trackNumber = trackNumber;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SongInAlbumForApiContract songInAlbumForApiContract = (SongInAlbumForApiContract) o;
    return Objects.equals(this.discNumber, songInAlbumForApiContract.discNumber) &&
        Objects.equals(this.id, songInAlbumForApiContract.id) &&
        Objects.equals(this.name, songInAlbumForApiContract.name) &&
        Objects.equals(this.rating, songInAlbumForApiContract.rating) &&
        Objects.equals(this.song, songInAlbumForApiContract.song) &&
        Objects.equals(this.trackNumber, songInAlbumForApiContract.trackNumber);
  }

  @Override
  public int hashCode() {
    return Objects.hash(discNumber, id, name, rating, song, trackNumber);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SongInAlbumForApiContract {\n");
    sb.append("    discNumber: ").append(toIndentedString(discNumber)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    rating: ").append(toIndentedString(rating)).append("\n");
    sb.append("    song: ").append(toIndentedString(song)).append("\n");
    sb.append("    trackNumber: ").append(toIndentedString(trackNumber)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

